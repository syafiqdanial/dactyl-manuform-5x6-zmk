#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
behaviors {

      macros {
         roundbkt: round_brackets {
            label= "round_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR>;
         };
         
         squarebkt: square_brackets {
            label= "square_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBKT &kp RBKT>;
         };
         
         curlbkt: curl_brackets {
            label= "curl_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBRC &kp RBRC>;
         };
        
         apostrophe: apostrophe {
            label= "apostrophe";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DQT &kp DQT>;
         };
      };
      
hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
};

    keymap {
        compatible = "zmk,keymap";
        
// -----------------------------------------------------------------------------------------
// | na | na | na | na  | na  | na ||             || na | na  | na  | na | na | na |
// | na | Q  | W  | E   | R   | T  ||             || Y  | U   | I   | O  | P  | na |
// | na | A  | S  | D   | F   | G  ||             || H  | J   | K   | L  | '  | na |
// | na | Z  | X  | C   | V   | B  ||             || N  | M   | ,   | .  | /  | na |
//           | B1 | B2  |          ||             ||          | B3  | B4 |
//                | 1,1 | na  |    ||             ||    | na  | 1,1 |
//                | 1,2 | 1,3 |    ||             ||    | 1,3 | 1,2 |
//                | 2,3 | 2,2 |    ||             ||    | 2,2 | 2,3 |

default_layer {
    bindings = <
        &none &none      &none      &none       &none       &none          &none        &none         &none       &none      &none        &none
        &none &kp Q      &kp W      &kp E       &kp R       &kp T          &kp Y        &kp U         &kp I       &kp O      &kp P        &none
        &none &hm LGUI A &hm LALT S &hm LCTRL D &kp F       &kp G          &kp H        &kp J         &hm RCTRL K &hm RALT L &hm RGUI SQT &none
        &none &kp Z      &kp X      &kp C       &kp V       &kp B          &kp N        &kp M         &kp COMMA   &kp DOT    &kp FSLH     &none
                         &none      &none                                                             &kp SEMI    &kp TILDE
                                                &lt 1 SPACE &none          &none        &lt 1 BSPC
                                                &lt 2 TAB   &lt 3 ESC      &lt 3 DEL    &lt 2 ENTER
                                                &kp LPAR    &kp LSHFT      &kp RSHFT    &kp RPAR
    >;
};

navnum_layer {
    bindings = <
        &none  &none           &none         &none    &none  &none                 &none    &none     &none    &none     &none &none
        &none  &kp KP_PLUS     &kp N1        &kp N2   &kp N3 &none                 &none    &kp CAPS  &kp UP   &none     &none &none
        &none  &kp KP_MINUS    &kp N4        &kp N5   &kp N6 &kp EQUAL             &none    &kp LEFT  &kp DOWN &kp RIGHT &none &none
        &none  &kp KP_MULTIPLY &kp N7        &kp N8   &kp N9 &none                 &none    &none     &none    &none     &none &none
                               &kp KP_DIVIDE &kp N0                                                   &none    &none
                                             &kp BSPC &kp ENTER                             &kp ENTER &kp BSPC
                                             &none    &none                                 &none     &none
                                             &none    &none                                 &none     &none
    >;
};

symbol_layer {
    bindings = <
        &none  &none     &none      &none         &none         &none                 &none  &none  &none   &none   &none   &none
        &none  &roundbkt &squarebkt &curlbkt      &kp GRAVE     &kp TILDE             &trans &kp F1 &kp F2  &kp F3  &kp F4  &none
        &none  &kp EXCL  &kp AT     &kp HASH      &kp DOLLAR    &kp PIPE              &trans &kp F5 &kp F6  &kp F7  &kp F8  &none
        &none  &kp PRCNT &kp CARET  &kp AMPERSAND &kp BACKSLASH &kp UNDERSCORE        &trans &kp F9 &kp F10 &kp F11 &kp F12 &none
                         &none      &none                                                           &none   &none
                                                  &none         &none                 &none  &none
                                                  &none         &none                 &none  &none
                                                  &none         &none                 &none  &none
    >;
};

btfc_layer {
    bindings = <
        &none &none        &none        &none        &none        &none            &none       &none        &none        &none      &none &none
        &none &bt BT_SEL 0 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none            &none       &none        &none        &bt BT_CLR &none &none
        &none &none        &none        &none        &none        &none            &none       &none        &none        &none      &none &none
        &none &none        &none        &none        &none        &bootloader      &bootloader &none        &none        &none      &none &none
                           &none        &none                                                               &none        &none
                                        &kp C_BRI_UP  &kp C_VOL_UP                             &kp C_VOL_UP &kp C_BRI_UP
                                        &kp C_BRI_DN  &kp C_VOL_DN                             &kp C_VOL_DN &kp C_BRI_DN
                                        &reset        &kp C_MUTE                               &kp C_MUTE   &reset
    >;
};
    };
};
